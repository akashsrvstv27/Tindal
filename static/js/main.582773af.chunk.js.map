{"version":3,"sources":["Header.js","firebase.js","TindalCards.js","SwipeButtons.js","Profile.js","Chat.js","Chats.js","ChatScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Header","backButton","hideChat","history","useHistory","className","IconButton","onClick","replace","fontSize","to","src","alt","database","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TindalCards","useState","animal","setAnimal","useEffect","unsubscribe","collection","onSnapshot","snapshot","docs","map","doc","data","animals","preventSwipe","style","backgroundImage","url","name","age","SwipeButtons","Profile","backgroundColor","location","breed","Chat","message","profilePic","timestamp","Avatar","Chats","ChatScreen","input","setInput","image","messages","setMessages","value","onChange","e","target","type","placeholder","preventDefault","color","marginRight","fontWeight","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.582773af.chunk.js","sourcesContent":["import React from 'react'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ForumIcon from '@material-ui/icons/Forum'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport \"./Header.css\"\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nfunction Header({backButton, hideChat}){\r\n\r\n\r\n\r\n    const history= useHistory();\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"header\">\r\n\r\n            {backButton ? (\r\n                \r\n                    <IconButton onClick={() => history.replace(backButton)}>\r\n                        <ArrowBackIosIcon fontSize=\"large\" className=\"header__icon\"/>\r\n\r\n                    </IconButton>\r\n                   \r\n            ) :\r\n            (\r\n\r\n                <Link to=\"/profile\">\r\n                    <IconButton>\r\n                        <PersonIcon fontSize=\"large\" className=\"header__icon\"/>\r\n                    </IconButton>\r\n                </Link>\r\n\r\n            )}\r\n\r\n\r\n\r\n            \r\n\r\n\r\n            \r\n            <Link to=\"/\">\r\n            <img className=\"header__logo\" src=\"./mylogo.png\" alt=\"\"/>\r\n            </Link>\r\n\r\n\r\n\r\n\r\n            {hideChat ? (\r\n                <h3>Pet's profile!</h3>\r\n\r\n            ):\r\n            (\r\n                <Link to=\"/chat\">\r\n                    <IconButton>\r\n                        <ForumIcon fontSize=\"large\" className=\"header__icon\"/>\r\n                    </IconButton>\r\n                </Link>\r\n            )}\r\n            \r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nimport firebase from \"firebase\"\r\n\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB5m04THMk9zEBefmGtFmHx9zZ_8rcBE5I\",\r\n    authDomain: \"tindal-8b57e.firebaseapp.com\",\r\n    projectId: \"tindal-8b57e\",\r\n    storageBucket: \"tindal-8b57e.appspot.com\",\r\n    messagingSenderId: \"378368946147\",\r\n    appId: \"1:378368946147:web:b796324383d3de48f6bad6\",\r\n    measurementId: \"G-1YBXGKBB8H\"\r\n  };\r\n\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n  const database = firebaseApp.firestore();\r\n\r\n\r\n  export default database;","import React, { useState, useEffect } from 'react'\r\nimport TinderCard from \"react-tinder-card\"\r\nimport \"./TindalCards.css\"\r\nimport database from './firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction TindalCards(){\r\n    // const people = [];\r\n    const [animal, setAnimal]= useState([]);\r\n\r\n\r\n    //Piece of code that runs based on a condition\r\n    useEffect(() => {\r\n        //this is where the code runs\r\n        const unsubscribe = database\r\n        .collection('people')\r\n        .onSnapshot(snapshot => {  //people is the collection name in firevbase\r\n            setAnimal(snapshot.docs.map( doc => doc.data()));\r\n\r\n            return() => {\r\n                //this is the cleanup\r\n                unsubscribe();\r\n            };\r\n        }) \r\n    }, []);\r\n\r\n    //push to array\r\n    // nomrally, people.push('akash','aman')\r\n    //in react, setPeople([...people,'akash','aman'])\r\n    return(\r\n      <div>\r\n        \r\n\r\n        <div className=\"tindalCards__cardContainer\">\r\n\r\n        {animal.map(animals => (\r\n            \r\n            <TinderCard\r\n            className=\"swipe\"\r\n            key={animals.name}\r\n            preventSwipe={['up','down']} >\r\n                <div \r\n                style={{backgroundImage: `url(${animals.url})`}}\r\n                className=\"card\">\r\n                    <h3>{animals.name} ({animals.age} years)</h3>\r\n\r\n                    <div className=\"button1\">\r\n                    <Link to=\"\">\r\n                    <button>View Profile</button>\r\n                    </Link>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                \r\n            </TinderCard>\r\n            \r\n        ))}\r\n\r\n        </div>\r\n\r\n    </div> );\r\n}\r\n\r\nexport default TindalCards","import React from 'react'\r\nimport \"./SwipeButtons.css\"\r\nimport ReplayIcon from \"@material-ui/icons/Replay\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\r\n\r\nimport IconButton  from '@material-ui/core/IconButton'\r\n\r\nfunction SwipeButtons(){\r\n    return(\r\n        <div className=\"swipeButtons\">\r\n\r\n        \r\n\r\n            <IconButton className=\"swipeButtons__star\">\r\n            <StarIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButtons__replay\">\r\n            <ReplayIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButtons__close\">\r\n            <CloseIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            \r\n\r\n            <IconButton className=\"swipeButtons__favorite\">\r\n            <FavoriteIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            \r\n\r\n            \r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SwipeButtons","import React, { useState, useEffect } from 'react'\r\nimport \"./Profile.css\"\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport database from './firebase';\r\n\r\nimport IconButton  from '@material-ui/core/IconButton'\r\n\r\nfunction Profile(){\r\n\r\n\r\n    const [animal, setAnimal]= useState([]);\r\n\r\n\r\n    //Piece of code that runs based on a condition\r\n    useEffect(() => {\r\n        //this is where the code runs\r\n        const unsubscribe = database\r\n        .collection('people')\r\n        .onSnapshot(snapshot => {  //people is the collection name in firebase\r\n            setAnimal(snapshot.docs.map( doc => doc.data()));\r\n\r\n            return() => {\r\n                //this is the cleanup\r\n                unsubscribe();\r\n            };\r\n        }) \r\n    }, []);\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n        <div className=\"Container\">\r\n\r\n        \r\n\r\n\r\n        <div className=\"tindalCards__cardContainer\">\r\n\r\n        {animal.map(animals => (\r\n            \r\n            <div\r\n            className=\"swipe\"\r\n            key={animals.name}\r\n            preventSwipe={['up','down']}>\r\n                <div \r\n                style={{backgroundImage: `url(${animals.url})`}}\r\n                className=\"card2\">  \r\n                </div>\r\n\r\n\r\n                <div \r\n                style={{backgroundColor: `white`}}\r\n                className=\"details__container\"\r\n                >  \r\n                <h3>Name: {animals.name} </h3>\r\n                    <h3>Age: {animals.age} years</h3>\r\n                    <h3>City: {animals.location} </h3>\r\n                    <h3>Breed: {animals.breed}</h3>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n            \r\n        ))}\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"swipeButtons\">\r\n        \r\n        <Link to=\"/\">\r\n        <IconButton className=\"swipeButtons__close\">\r\n        <CloseIcon fontSize=\"large\" />\r\n        </IconButton>\r\n        </Link>\r\n        \r\n\r\n\r\n        \r\n\r\n        <IconButton className=\"swipeButtons__favorite\">\r\n        <SettingsIcon fontSize=\"large\" />\r\n        </IconButton>\r\n\r\n        \r\n        \r\n    </div>\r\n    </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport \"./Chat.css\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Chat({name, message, profilePic, timestamp}){\r\n    return(\r\n\r\n    <Link to={`/chat/${name}`}>\r\n\r\n        <div className=\"chat\">\r\n\r\n            <Avatar src={profilePic} className=\"chat__image\" alt=\"name\" />\r\n\r\n            <div className=\"chat__details\">\r\n                <h2>{name}</h2>\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n            <div className=\"chat__timestamp\">\r\n                <p>{timestamp}</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default Chat\r\n\r\n","\r\nimport React from 'react'\r\nimport \"./Chats.css\"\r\nimport Chat from \"./Chat\"\r\n\r\nfunction Chats(){\r\n\r\n    return (\r\n        <div className=\"chats\">\r\n            <Chat\r\n            name=\"Mark\"\r\n            message=\"Hey! What's up?\"\r\n            timestamp=\"40 seconds ago\"\r\n            profilePic=\"https://static.toiimg.com/photo/msid-67586673/67586673.jpg?3918697\"\r\n            />\r\n\r\n        <Chat\r\n            name=\"Elon\"\r\n            message=\"Hello!\"\r\n            timestamp=\"55 minutes ago\"\r\n            profilePic=\"https://i.ytimg.com/vi/WDxkBjL_r8g/maxresdefault.jpg\"\r\n            />\r\n\r\n        <Chat\r\n            name=\"Steve\"\r\n            message=\"Heya...\"\r\n            timestamp=\"1 day ago\"\r\n            profilePic=\"https://cdn.mos.cms.futurecdn.net/ZvueiLL2vdwoHWHjCRuQCW-1200-80.jpg\"\r\n            />\r\n\r\n        <Chat\r\n            name=\"Sarah\"\r\n            message=\"Hola!!!\"\r\n            timestamp=\"3 days ago\"\r\n            profilePic=\"https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fstatic.onecms.io%2Fwp-content%2Fuploads%2Fsites%2F47%2F2020%2F06%2F26%2Forange-kitten-blue-eyes-730290907-2000.jpg\"\r\n            \r\n            />\r\n\r\n            \r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Chats","import React, { useEffect, useState, setInput, input } from 'react'\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport \"./ChatScreen.css\"\r\n\r\nfunction ChatScreen(){\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n\r\n    const [messages, setMessages] = useState([\r\n        {\r\n            name: 'Mark',\r\n            message: 'Whats Up? <3',\r\n            image: 'https://www.wideopenpets.com/wp-content/uploads/2019/08/Owning-a-Husky.png',\r\n\r\n        },\r\n\r\n        {\r\n            name: 'Mark',\r\n            message: 'Hows it goin?',\r\n            image: 'https://www.wideopenpets.com/wp-content/uploads/2019/08/Owning-a-Husky.png',\r\n\r\n        },\r\n\r\n        {\r\n            \r\n            message: 'Hello!',\r\n            \r\n        },\r\n    ]);\r\n\r\n    const handleSend = e => {\r\n        e.preventDefault();\r\n\r\n        setMessages([...messages, { message : input}]);\r\n        setInput(\"\");\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"chatScreen\">\r\n            <p className=\"chatScreen__timestamp\">You matched with Mark on 01/07/2021</p>\r\n\r\n            {messages.map(message => (\r\n\r\n                message.name ? (\r\n\r\n                    <div className=\"chatScreen__message\">\r\n\r\n                    <Avatar className=\"chatScreen__image\"\r\n                    src={message.image}\r\n                    alt={message.name} />\r\n                    <p className=\"chatScreen__text\">{message.message}</p>\r\n                    </div>\r\n\r\n                ) : (\r\n\r\n                    <div className=\"chatScreen__message\">\r\n\r\n                    \r\n                    <p className=\"chatScreen__textUser\">{message.message}</p>\r\n                    </div>\r\n\r\n                )\r\n\r\n                \r\n\r\n            ))}\r\n\r\n            <div>\r\n                <form className=\"chatScreen__input\">\r\n                <input\r\n                value={input}\r\n                onChange={e => setInput(e.target.value)}\r\n                type=\"text\" placeholder=\"..............Type your message..............\" className=\"chatScreen__inputField\" />\r\n                <button \r\n                onClick={handleSend}\r\n                type=\"submit\"\r\n                style={{backgroundColor: `rgb(185, 184, 184)`, color:`black`, marginRight: `30px`, fontWeight: `bolder`}} className=\"chatScreen__inputButton\">SEND</button>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatScreen","import Header from \"./Header\";\nimport TindalCards from \"./TindalCards\"\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SwipeButtons from \"./SwipeButtons\";\nimport Profile from \"./Profile\";\nimport Chats from \"./Chats\"\nimport \"./ChatScreen\"\nimport ChatScreen from \"./ChatScreen\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n    \n     <Router>\n\n     \n\n       <Switch>\n\n\n\n       <Route path=\"/profile\">\n          <Header hideChat=\"/\" />\n           \n           <Profile />\n         </Route>\n\n\n\n\n         <Route path=\"/chat/:person\">\n\n           <Header backButton=\"/chat\"/>\n           \n           <ChatScreen />\n         </Route>\n\n\n\n\n       <Route path=\"/chat\">\n\n           <Header backButton=\"/\"/>\n           <Chats />\n         </Route>\n\n\n\n\n\n         <Route path=\"/\">\n\n            <Header />\n\n           <TindalCards />\n           \n           <SwipeButtons />\n\n         </Route>\n\n         \n\n         \n\n       </Switch>\n      \n\n       </Router> \n    </div>\n  );\n}\n\nexport default App;\n\n\n\n{/*Header*/}\n      {/*Cards*/}\n      {/*Buttons*/}\n\n      {/*Chat Screen*/}\n\n      {/*Individual Chat Screen*/}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}